package ma.youssefproject.dictionnaire.config;

import ma.youssefproject.dictionnaire.model.DataBase;
import ma.youssefproject.dictionnaire.model.MotDAO;

import java.sql.Connection;

public class DAOFactory {

    // ‚ö° Connexion unique √† la base de donn√©es
    // - On la garde ici pour que tous les DAO utilisent la m√™me connexion.
    // - √âvite de cr√©er plusieurs connexions inutiles et de surcharger la DB.
    private final Connection connexion;

    // üîπ Constructeur de la factory
    // - Cr√©e la connexion √† la base de donn√©es au moment o√π la factory est instanci√©e.
    // - Permet de centraliser la cr√©ation de DAO et la gestion de la connexion.
    public DAOFactory() {
        // Instancie la classe DataBase qui g√®re la connexion
        DataBase db = new DataBase();
        // R√©cup√®re la connexion et la conserve dans un attribut final
        this.connexion = db.getConnexion();
    }

    // üîπ M√©thode pour obtenir un DAO sp√©cifique
    // - Ici, on retourne un MotDAO d√©j√† pr√™t √† l'emploi.
    // - L'avantage : Main ou le controller n'ont pas besoin de savoir comment cr√©er le DAO,
    //   ils re√ßoivent simplement l'objet d√©j√† configur√©.
    // - Permet aussi d'√©changer facilement le DAO (ex : pour tests unitaires)
    public MotDAO getMotDAO() {
        return new MotDAO(connexion);
    }

    /*
     * üîπ Pourquoi utiliser une factory pour les DAO ?
     *
     * 1Ô∏è‚É£ Centralisation de la cr√©ation des objets :
     *    - Toutes les instances de DAO sont cr√©√©es depuis un seul endroit.
     *
     * 2Ô∏è‚É£ R√©duction des d√©pendances fortes :
     *    - Le reste de l'application (Main, Controller, Vue) n'a pas besoin de conna√Ætre
     *      les d√©tails de la connexion ou de l'impl√©mentation du DAO.
     *
     * 3Ô∏è‚É£ Flexibilit√© et testabilit√© :
     *    - On peut facilement remplacer le DAO par une version factice (mock) pour les tests.
     *
     * 4Ô∏è‚É£ Bonne pratique MVC :
     *    - Respecte la s√©paration des responsabilit√©s : le mod√®le est g√©r√© et fourni par la factory,
     *      le controller s'en sert, et la vue reste totalement ind√©pendante.
     */
}